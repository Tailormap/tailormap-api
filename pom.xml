<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (C) 2021 B3Partners B.V.

SPDX-License-Identifier: MIT
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.2</version>
    </parent>
    <groupId>org.tailormap</groupId>
    <artifactId>tailormap-api</artifactId>
    <version>11.4.6-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>Tailormap API</name>
    <description>Tailormap API provides the backend for Tailormap</description>
    <url>https://github.com/Tailormap/tailormap-api/</url>
    <inceptionYear>2021</inceptionYear>
    <organization>
        <name>B3Partners B.V.</name>
        <url>https://www.b3partners.nl/</url>
    </organization>
    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://raw.githubusercontent.com/Tailormap/tailormap-api/main/LICENSES/MIT.txt</url>
            <distribution>repo</distribution>
            <comments>For the tailormap-api code.</comments>
        </license>
        <license>
            <name>CC0-1.0</name>
            <url>https://raw.githubusercontent.com/Tailormap/tailormap-api/main/LICENSES/CC0-1.0.txt</url>
            <distribution>repo</distribution>
            <comments>For the tailormap-api documentation.</comments>
        </license>
    </licenses>
    <developers>
        <developer>
            <id>matthijsln</id>
            <name>Matthijs Laan</name>
            <email>matthijslaan@b3partners.nl</email>
            <organization>B3Partners B.V.</organization>
            <organizationUrl>https://www.b3partners.nl</organizationUrl>
        </developer>
        <developer>
            <id>mprins</id>
            <name>Mark Prins</name>
            <email>mark@b3partners.nl</email>
            <organization>B3Partners B.V.</organization>
            <organizationUrl>https://www.b3partners.nl</organizationUrl>
        </developer>
        <developer>
            <id>geertplaisier</id>
            <name>Geert Plaisier</name>
            <email>geert@b3partners.nl</email>
            <organization>Gnamic</organization>
            <organizationUrl>https://www.gnamic.nl/</organizationUrl>
        </developer>
    </developers>
    <scm>
        <connection>scm:git:git@github.com:Tailormap/tailormap-api.git</connection>
        <developerConnection>scm:git:git@github.com:Tailormap/tailormap-api.git</developerConnection>
        <tag>tailormap-api-11.4.4</tag>
        <url>https://github.com/Tailormap/tailormap-api/</url>
    </scm>
    <issueManagement>
        <system>Jira</system>
        <url>https://b3partners.atlassian.net/browse/HTM</url>
    </issueManagement>
    <ciManagement>
        <system>Github Actions</system>
        <url>https://github.com/Tailormap/tailormap-api/actions</url>
    </ciManagement>
    <distributionManagement>
        <repository>
            <id>repo.b3p.nl</id>
            <name>B3Partners releases repository</name>
            <url>https://repo.b3p.nl/nexus/repository/releases/</url>
        </repository>
        <snapshotRepository>
            <id>repo.b3p.nl</id>
            <name>B3Partners snapshots repository</name>
            <url>https://repo.b3p.nl/nexus/repository/snapshots/</url>
        </snapshotRepository>
        <site>
            <id>gh-pages</id>
            <name>github pages site</name>
            <url>scm:git:ssh://git@github.com/tailormap/tailormap-api.git</url>
        </site>
    </distributionManagement>
    <properties>
        <java.version>17</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler.release>${java.version}</maven.compiler.release>
        <maven-compiler-plugin.version>3.12.1</maven-compiler-plugin.version>
        <project.build.outputTimestamp>2025-01-22T14:15:27Z</project.build.outputTimestamp>
        <geotools.version>32.1</geotools.version>
        <jts.version>1.20.0</jts.version>
        <okhttp.version>5.0.0-alpha.14</okhttp.version>
        <spring.boot.version>${project.parent.version}</spring.boot.version>
        <!-- solr and jetty versions may need to match to prevent errors such as
        Caused by: java.lang.NoClassDefFoundError: org/eclipse/jetty/client/util/InputStreamResponseListener -->
        <jetty.version>10.0.24</jetty.version>
        <solr.version>9.8.0</solr.version>
        <!--
        Spring Boot version overrides.

        See org.springframework.boot:spring-boot-dependencies
        eg. https://search.maven.org/artifact/org.springframework.boot/spring-boot-dependencies

        and use
            mvn -U org.codehaus.mojo:versions-maven-plugin:display-dependency-updates
        and
            mvn -U org.codehaus.mojo:versions-maven-plugin:display-plugin-updates
        to check
        -->
        <commons-lang3.version>3.17.0</commons-lang3.version>
        <flyway.version>10.22.0</flyway.version>
        <hamcrest.version>3.0</hamcrest.version>
        <hibernate.version>6.6.5.Final</hibernate.version>
        <!-- <jackson-bom.version>2.18.2</jackson-bom.version> -->
        <junit-jupiter.version>5.11.4</junit-jupiter.version>
        <logback.version>1.5.14</logback.version>
        <micrometer.version>1.14.3</micrometer.version>
        <mssql-jdbc.version>12.8.1.jre11</mssql-jdbc.version>
        <oracle-database.version>23.6.0.24.10</oracle-database.version>
        <postgresql.version>42.7.5</postgresql.version>
        <!-- <spring-data-bom.version>2024.0.6</spring-data-bom.version> -->
        <!-- <spring-hateoas.version>2.3.3</spring-hateoas.version> -->
        <!-- <spring-security.version>6.3.4</spring-security.version> -->
        <quartz.version>2.5.0</quartz.version>
        <webjars-locator-core.version>0.59</webjars-locator-core.version>
        <xmlunit2.version>2.10.0</xmlunit2.version>
        <maven-clean-plugin.version>3.4.0</maven-clean-plugin.version>
        <maven-surefire-plugin.version>3.2.5</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>3.2.5</maven-failsafe-plugin.version>
        <maven-deploy-plugin.version>3.1.0</maven-deploy-plugin.version>
        <maven-install-plugin.version>3.1.0</maven-install-plugin.version>
        <maven-javadoc-plugin.version>3.11.2</maven-javadoc-plugin.version>
        <maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>
        <maven-assembly-plugin.version>3.4.2</maven-assembly-plugin.version>
        <maven-enforcer-plugin.version>3.2.1</maven-enforcer-plugin.version>
        <maven-install-plugin.version>3.1.0</maven-install-plugin.version>
        <maven-resources-plugin.version>3.3.0</maven-resources-plugin.version>
        <!-- end version overrides -->
        <maven-pmd-plugin.version>3.26.0</maven-pmd-plugin.version>
        <versions-maven-plugin.version>2.18.0</versions-maven-plugin.version>
        <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
        <dependency-check-maven.version>12.0.1</dependency-check-maven.version>
        <modernizer-maven-plugin.version>3.1.0</modernizer-maven-plugin.version>
        <maven-fluido-skin.version>2.0.1</maven-fluido-skin.version>
        <swagger-ui.version>5.18.2</swagger-ui.version>
        <sentry.version>8.0.0</sentry.version>
        <errorProne.version>2.36.0</errorProne.version>
        <errorProneFlags>-XepDisableWarningsInGeneratedCode</errorProneFlags>
        <errorProneExcludePaths>${project.build.directory}/generated-sources/.*</errorProneExcludePaths>
        <compiler.lint>deprecation,unchecked</compiler.lint>
        <failOnValidation>true</failOnValidation>
        <spotless.action>apply</spotless.action>
        <pom.fmt.action>sort</pom.fmt.action>
        <!-- suppress missing javadoc warnings -->
        <javadoc.doclint>all,-missing</javadoc.doclint>
        <!--  ghcr.io or alternatively another OCI repo such as docker.b3p.nl -->
        <docker.deploy.repo>ghcr.io</docker.deploy.repo>
        <docker.skip>false</docker.skip>
        <docker.pull.policy>Always</docker.pull.policy>
        <!-- skip QA checks -->
        <skipQA>false</skipQA>
        <skipJavaDoc>false</skipJavaDoc>
        <dependencyCheckAutoUpdate>true</dependencyCheckAutoUpdate>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <!-- override the jetty-ee10-bom import so we can downgrade jetty to a solrj compatible version,
                 our spring-boot parent provides this import -->
                <groupId>org.eclipse.jetty.ee10</groupId>
                <artifactId>jetty-ee10-bom</artifactId>
                <version>12.0.16</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit-jupiter.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.gaul</groupId>
                <artifactId>modernizer-maven-annotations</artifactId>
                <version>${modernizer-maven-plugin.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>ch.rasc</groupId>
            <artifactId>sse-eventbus</artifactId>
            <version>2.0.1</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <!-- ? should be  <scope>test</scope> ... -->
        </dependency>
        <dependency>
            <groupId>com.microsoft.sqlserver</groupId>
            <artifactId>mssql-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>com.oracle.database.jdbc</groupId>
            <artifactId>ojdbc11</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.18.0</version>
        </dependency>
        <dependency>
            <groupId>io.hypersistence</groupId>
            <artifactId>hypersistence-tsid</artifactId>
            <!-- this version should match that of hypersistence-utils-hibernate-63 /
            hypersistence-utils-parent -->
            <version>2.1.3</version>
        </dependency>
        <dependency>
            <groupId>io.hypersistence</groupId>
            <artifactId>hypersistence-utils-hibernate-63</artifactId>
            <version>3.9.0</version>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>
        <dependency>
            <groupId>io.sentry</groupId>
            <artifactId>sentry</artifactId>
            <version>${sentry.version}</version>
        </dependency>
        <dependency>
            <groupId>io.sentry</groupId>
            <artifactId>sentry-jdbc</artifactId>
            <version>${sentry.version}</version>
        </dependency>
        <dependency>
            <groupId>io.sentry</groupId>
            <artifactId>sentry-quartz</artifactId>
            <version>${sentry.version}</version>
        </dependency>
        <dependency>
            <groupId>io.sentry</groupId>
            <artifactId>sentry-spring-boot-starter-jakarta</artifactId>
            <version>${sentry.version}</version>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>2.2.28</version>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>me.gosimple</groupId>
            <artifactId>nbvcxz</artifactId>
            <version>1.5.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr-solrj</artifactId>
            <version>${solr.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.solr</groupId>
                    <artifactId>solr-solrj-zookeeper</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.solr</groupId>
                    <artifactId>solr-solrj-streaming</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-database-postgresql</artifactId>
        </dependency>
        <dependency>
            <!-- provides @SuppressModernizer that can be used on method to suppress the Modernizer plugin -->
            <groupId>org.gaul</groupId>
            <artifactId>modernizer-maven-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-api</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-cql</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-epsg-hsql</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-geojson-core</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-http</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-jdbc</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-main</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-metadata</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-referencing</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-wfs-ng</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-wms</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-wmts</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-xml</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools.jdbc</groupId>
            <artifactId>gt-jdbc-oracle</artifactId>
            <version>${geotools.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.oracle.database.jdbc</groupId>
                    <artifactId>ojdbc8</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.geotools.jdbc</groupId>
            <artifactId>gt-jdbc-postgis</artifactId>
            <version>${geotools.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.geotools.jdbc</groupId>
            <artifactId>gt-jdbc-sqlserver</artifactId>
            <version>${geotools.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>net.sourceforge.jtds</groupId>
                    <artifactId>jtds</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.microsoft.sqlserver</groupId>
                    <artifactId>mssql-jdbc</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.geotools.xsd</groupId>
            <artifactId>gt-xsd-core</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools.xsd</groupId>
            <artifactId>gt-xsd-gml3</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate.orm</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate.orm</groupId>
            <artifactId>hibernate-micrometer</artifactId>
        </dependency>
        <dependency>
            <!-- required for ch.rasc:sse-eventbus:2.0.1 where it is listed as provided -->
            <groupId>org.immutables</groupId>
            <artifactId>value</artifactId>
            <version>2.10.1</version>
        </dependency>
        <dependency>
            <groupId>org.locationtech.jts</groupId>
            <artifactId>jts-core</artifactId>
            <version>${jts.version}</version>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.checkerframework</groupId>
                    <artifactId>checker-qual</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-quartz</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-rest-webmvc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.hateoas</groupId>
            <artifactId>spring-hateoas</artifactId>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>swagger-ui</artifactId>
            <version>${swagger-ui.version}</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>webjars-locator-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.romankh3</groupId>
            <artifactId>image-comparison</artifactId>
            <version>4.4.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>mockwebserver3</artifactId>
            <version>${okhttp.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>mockwebserver3-junit5</artifactId>
            <version>${okhttp.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>${okhttp.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit-pioneer</groupId>
            <artifactId>junit-pioneer</artifactId>
            <version>2.3.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.assertj</groupId>
                    <artifactId>assertj-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <repositories>
        <repository>
            <id>B3Partners</id>
            <name>Releases hosted by B3Partners</name>
            <url>https://repo.b3p.nl/nexus/repository/public/</url>
        </repository>
    </repositories>
    <pluginRepositories />
    <build>
        <defaultGoal>install</defaultGoal>
        <!-- no version number on jar makes building docker image easier -->
        <finalName>${project.artifactId}</finalName>
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>${basedir}/src/main/resources</directory>
                <includes>
                    <include>**/index.html</include>
                    <include>**/application*.properties</include>
                    <include>**/git.properties</include>
                    <include>**/spy.properties</include>
                </includes>
            </resource>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <excludes>
                    <exclude>**/index.html</exclude>
                    <exclude>**/application*.properties</exclude>
                    <exclude>**/git.properties</exclude>
                    <exclude>**/spy.properties</exclude>
                </excludes>
            </resource>
            <resource>
                <targetPath>static/swagger-ui</targetPath>
                <filtering>false</filtering>
                <directory>${basedir}/src/main/resources</directory>
                <includes>
                    <include>**/*.yaml</include>
                </includes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <filtering>true</filtering>
                <directory>${basedir}/src/test/resources</directory>
                <includes>
                    <include>**/application*.properties</include>
                </includes>
            </testResource>
            <testResource>
                <directory>${basedir}/src/test/resources</directory>
                <excludes>
                    <exclude>**/application*.properties</exclude>
                </excludes>
            </testResource>
        </testResources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.openapitools</groupId>
                    <artifactId>openapi-generator-maven-plugin</artifactId>
                    <version>7.11.0</version>
                </plugin>
                <plugin>
                    <groupId>org.hibernate.orm.tooling</groupId>
                    <artifactId>hibernate-enhance-maven-plugin</artifactId>
                    <version>${hibernate.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>${maven-pmd-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.owasp</groupId>
                    <artifactId>dependency-check-maven</artifactId>
                    <version>${dependency-check-maven.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.github.ekryd.sortpom</groupId>
                    <artifactId>sortpom-maven-plugin</artifactId>
                    <version>4.0.0</version>
                </plugin>
                <plugin>
                    <groupId>com.spotify.fmt</groupId>
                    <artifactId>fmt-maven-plugin</artifactId>
                    <version>2.25</version>
                </plugin>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>0.45.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-scm-publish-plugin</artifactId>
                    <version>3.2.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.21.0</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>3.1.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.8.1</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${project.basedir}</directory>
                            <includes>
                                <include>tailormap.log*</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.github.git-commit-id</groupId>
                <artifactId>git-commit-id-maven-plugin</artifactId>
                <version>9.0.1</version>
                <configuration>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                </configuration>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <delimiters>
                        <delimiter>@</delimiter>
                    </delimiters>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>org/tailormap/api/viewer/model/**</exclude>
                        <exclude>org/tailormap/api/persistence/json/**</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <propertyName>surefireArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>pre-integration-test</id>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <propertyName>failsafeArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-unit-test</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <phase>test</phase>
                    </execution>
                    <execution>
                        <id>post-integration-test</id>
                        <goals>
                            <goal>merge</goal>
                            <goal>report-integration</goal>
                            <goal>report</goal>
                        </goals>
                        <phase>post-integration-test</phase>
                        <configuration>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.build.directory}</directory>
                                    <includes>
                                        <include>*.exec</include>
                                    </includes>
                                </fileSet>
                            </fileSets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!--suppress UnresolvedMavenProperty -->
                    <argLine>${surefireArgLine}</argLine>
                    <excludes>
                        <exclude>**/*IntegrationTest.java</exclude>
                    </excludes>
                    <trimStackTrace>false</trimStackTrace>
                </configuration>
            </plugin>
            <plugin>
                <!-- Required for lazy fetching of properties,
                see https://vladmihalcea.com/the-best-way-to-lazy-load-entity-attributes-using-jpa-and-hibernate/ -->
                <groupId>org.hibernate.orm.tooling</groupId>
                <artifactId>hibernate-enhance-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>enhance</goal>
                        </goals>
                        <configuration>
                            <failOnError>true</failOnError>
                            <enableLazyInitialization>true</enableLazyInitialization>
                            <enableDirtyTracking>true</enableDirtyTracking>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <classifier>exec</classifier>
                    <cleanCache>true</cleanCache>
                    <!--suppress UnresolvedMavenProperty -->
                    <jvmArguments>${surefireArgLine}</jvmArguments>
                    <!-- wait between attempts, default 500 ms -->
                    <wait>1000</wait>
                    <!-- max attempts to check if application is up, default 60 -->
                    <maxAttempts>120</maxAttempts>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>build-info</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>start-spring-boot</id>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <!-- <skip>${skipQA}</skip> -->
                            <!--suppress UnresolvedMavenProperty, MavenModelInspection -->
                            <skip>${skipTests}</skip>
                            <profiles>
                                <profile>test</profile>
                            </profiles>
                            <!--suppress UnresolvedMavenProperty -->
                            <jvmArguments>${failsafeArgLine}</jvmArguments>
                            <useTestClasspath>true</useTestClasspath>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-spring-boot</id>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                        <phase>post-integration-test</phase>
                        <configuration>
                            <!-- <skip>${skipQA}</skip> -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <fork>true</fork>
                    <compilerArgs combine.children="append">
                        <arg>-XDcompilePolicy=simple</arg>
                        <arg>--should-stop=ifError=FLOW</arg>
                        <arg>-Xplugin:ErrorProne -XepExcludedPaths:${errorProneExcludePaths} ${errorProneFlags}</arg>
                        <arg>-Xlint:${compiler.lint}</arg>
                        <arg>-Werror</arg>
                        <arg>-Xmaxwarns</arg>
                        <arg>1000</arg>
                        <!-- see https://errorprone.info/docs/installation -->
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED</arg>
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED</arg>
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED</arg>
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
                        <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
                        <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
                        <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
                    </compilerArgs>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>com.google.errorprone</groupId>
                            <artifactId>error_prone_core</artifactId>
                            <version>${errorProne.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <annotationProcessorPathsUseDepMgmt>true</annotationProcessorPathsUseDepMgmt>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-code-persistence-models</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/openapi/persistence-schemas.yaml</inputSpec>
                            <generatorName>spring</generatorName>
                            <modelPackage>org.tailormap.api.persistence.json</modelPackage>
                            <library>spring-boot</library>
                            <configOptions>
                                <!-- see https://openapi-generator.tech/docs/generators/spring/ -->
                                <dateLibrary>java8</dateLibrary>
                                <hideGenerationTimestamp>true</hideGenerationTimestamp>
                                <openApiNullable>false</openApiNullable>
                                <serializableModel>true</serializableModel>
                                <useOptional>true</useOptional>
                                <generatedConstructorWithRequiredArgs>false</generatedConstructorWithRequiredArgs>
                                <developerOrganization>${project.organization.name}</developerOrganization>
                                <developerOrganizationUrl>${project.organization.url}</developerOrganizationUrl>
                                <useJakartaEe>true</useJakartaEe>
                                <useSpringBoot3>true</useSpringBoot3>
                                <!-- Ignore properties which were removed from the model, so we don't have to write migration scripts for JSONB columns -->
                                <additionalModelTypeAnnotations>@com.fasterxml.jackson.annotation.JsonIgnoreProperties(ignoreUnknown = true)</additionalModelTypeAnnotations>
                            </configOptions>
                            <generateApis>false</generateApis>
                            <generateModels>true</generateModels>
                            <generateSupportingFiles>false</generateSupportingFiles>
                            <generateModelTests>false</generateModelTests>
                            <skipIfSpecIsUnchanged>true</skipIfSpecIsUnchanged>
                            <inlineSchemaNameMappings>GeoServiceSettings_layerSettings_value=GeoServiceLayerSettings</inlineSchemaNameMappings>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-admin-models</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/openapi/admin-schemas.yaml</inputSpec>
                            <generatorName>spring</generatorName>
                            <modelPackage>org.tailormap.api.admin.model</modelPackage>
                            <library>spring-boot</library>
                            <configOptions>
                                <dateLibrary>java8</dateLibrary>
                                <hideGenerationTimestamp>true</hideGenerationTimestamp>
                                <openApiNullable>false</openApiNullable>
                                <serializableModel>true</serializableModel>
                                <useOptional>true</useOptional>
                                <generatedConstructorWithRequiredArgs>false</generatedConstructorWithRequiredArgs>
                                <developerOrganization>${project.organization.name}</developerOrganization>
                                <developerOrganizationUrl>${project.organization.url}</developerOrganizationUrl>
                                <useJakartaEe>true</useJakartaEe>
                                <useSpringBoot3>true</useSpringBoot3>
                            </configOptions>
                            <generateApis>false</generateApis>
                            <generateModels>true</generateModels>
                            <generateSupportingFiles>false</generateSupportingFiles>
                            <generateModelTests>false</generateModelTests>
                            <skipIfSpecIsUnchanged>true</skipIfSpecIsUnchanged>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-viewer-models</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <!-- see https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator-maven-plugin -->
                            <inputSpec>${project.basedir}/src/main/resources/openapi/viewer-api.yaml</inputSpec>
                            <generatorName>spring</generatorName>
                            <modelPackage>org.tailormap.api.viewer.model</modelPackage>
                            <library>spring-boot</library>
                            <configOptions>
                                <!-- see https://openapi-generator.tech/docs/generators/spring/ -->
                                <dateLibrary>java8</dateLibrary>
                                <hideGenerationTimestamp>true</hideGenerationTimestamp>
                                <openApiNullable>false</openApiNullable>
                                <serializableModel>true</serializableModel>
                                <generatedConstructorWithRequiredArgs>false</generatedConstructorWithRequiredArgs>
                                <useOptional>true</useOptional>
                                <useJakartaEe>true</useJakartaEe>
                                <useSpringBoot3>true</useSpringBoot3>
                            </configOptions>
                            <!-- All common models from common-schemas.yaml here, comma separated -->
                            <importMappings>TileLayerHiDpiMode=org.tailormap.api.persistence.json.TileLayerHiDpiMode,
                                GeoServiceProtocol=org.tailormap.api.persistence.json.GeoServiceProtocol,
                                Bounds=org.tailormap.api.persistence.json.Bounds,
                                BoundsWithCRS=org.tailormap.api.persistence.json.BoundsWithCRS,
                                TMAttributeType=org.tailormap.api.persistence.json.TMAttributeType,
                                TMGeometryType=org.tailormap.api.persistence.json.TMGeometryType,
                                WMSStyle=org.tailormap.api.persistence.json.WMSStyle,
                                AppI18nSettings=org.tailormap.api.persistence.json.AppI18nSettings,
                                AppUiSettings=org.tailormap.api.persistence.json.AppUiSettings,
                                FormOptions=org.tailormap.api.persistence.json.FormOptions,
                                FormTab=org.tailormap.api.persistence.json.FormTab,
                                FormField=org.tailormap.api.persistence.json.FormField,
                                FormFieldValue=org.tailormap.api.persistence.json.FormFieldValue</importMappings>
                            <ignoreFileOverride>${project.basedir}/src/main/resources/openapi/common-schemas-openapi-ignore</ignoreFileOverride>
                            <generateApis>false</generateApis>
                            <generateModels>true</generateModels>
                            <generateSupportingFiles>false</generateSupportingFiles>
                            <generateModelTests>true</generateModelTests>
                            <skipIfSpecIsUnchanged>true</skipIfSpecIsUnchanged>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-spec</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/src/main/resources/openapi/viewer-api.yaml</inputSpec>
                            <generatorName>openapi</generatorName>
                            <output>${project.build.directory}/classes/static/swagger-ui</output>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>fix-generated-sources</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>process-sources</phase>
                        <configuration>
                            <target name="fix-generated-sources">
                                <!-- HTM-1051 replace javax.validation with jakarta.validation in generated sources
                                the current config still generates javax.validation, but we want jakarta.validation
                                -->
                                <replace dir="target/generated-sources/openapi/src/main/java/org/tailormap/api/" summary="true">
                                    <replacetoken><![CDATA[import javax.validation.]]></replacetoken>
                                    <replacevalue><![CDATA[import jakarta.validation.]]></replacevalue>
                                </replace>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-paths</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <target name="generate-paths">
                                <mkdir dir="${project.build.directory}/classes/static/swagger-ui" />
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                        <phase>verify</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-javadoc</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <phase>verify</phase>
                        <configuration>
                            <notimestamp>true</notimestamp>
                            <failOnWarnings>false</failOnWarnings>
                            <failOnError>${failOnValidation}</failOnError>
                            <skip>${skipJavaDoc}</skip>
                            <doclint>${javadoc.doclint}</doclint>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack-webjars</id>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <!-- for some reason we need to manually extract some webjar stuff to make things work... -->
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.webjars</groupId>
                                    <artifactId>swagger-ui</artifactId>
                                    <version>${swagger-ui.version}</version>
                                    <includes>META-INF/resources/webjars/**/*</includes>
                                    <excludes>META-INF/resources/webjars/**/*index.html</excludes>
                                    <excludes>META-INF/resources/webjars/**/**.gz</excludes>
                                    <excludes>META-INF/resources/webjars/**/*.map</excludes>
                                    <outputDirectory>${project.basedir}/target/classes/</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- not bound to any lifecycle, but can be run from commandline using:
                mvn -U install -DskipTests -DskipITs -Ddocker.skip=true org.owasp:dependency-check-maven:check -->
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <configuration>
                    <skip>${skipQA}</skip>
                    <suppressionFile>${project.basedir}/build/qa/owasp-suppression.xml</suppressionFile>
                    <hintsFile>${project.basedir}/build/qa/owasp-hints.xml</hintsFile>
                    <format>ALL</format>
                    <nvdApiKey>${env.NVD_API_KEY}</nvdApiKey>
                    <autoUpdate>${dependencyCheckAutoUpdate}</autoUpdate>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-pmd-plugin</artifactId>
                <configuration>
                    <skip>${skipQA}</skip>
                    <rulesets>
                        <ruleset>${project.basedir}/build/qa/PMD-ruleset_for_TM.xml</ruleset>
                    </rulesets>
                    <failurePriority>3</failurePriority>
                    <minimumPriority>3</minimumPriority>
                    <verbose>true</verbose>
                    <printFailingErrors>true</printFailingErrors>
                    <includeTests>true</includeTests>
                    <analysisCache>true</analysisCache>
                    <excludeRoots>
                        <excludeRoot>target/generated-sources</excludeRoot>
                    </excludeRoots>
                </configuration>
                <executions>
                    <execution>
                        <id>default-cli</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <phase>verify</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.gaul</groupId>
                <artifactId>modernizer-maven-plugin</artifactId>
                <version>${modernizer-maven-plugin.version}</version>
                <configuration>
                    <javaVersion>${java.version}</javaVersion>
                    <skip>${skipQA}</skip>
                    <failOnViolations>true</failOnViolations>
                </configuration>
                <executions>
                    <execution>
                        <id>modernizer</id>
                        <goals>
                            <goal>modernizer</goal>
                        </goals>
                        <phase>verify</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>2.44.2</version>
                <configuration>
                    <java>
                        <palantirJavaFormat>
                            <version>2.50.0</version>
                            <formatJavadoc>true</formatJavadoc>
                        </palantirJavaFormat>
                        <importOrder />
                        <removeUnusedImports />
                        <trimTrailingWhitespace />
                        <endWithNewline />
                        <formatAnnotations />
                        <indent>
                            <tabs>true</tabs>
                            <spacesPerTab>4</spacesPerTab>
                        </indent>
                        <indent>
                            <spaces>true</spaces>
                            <spacesPerTab>2</spacesPerTab>
                        </indent>
                    </java>
                    <upToDateChecking>
                        <enabled>true</enabled>
                        <indexFile>${project.basedir}/.spotless-index</indexFile>
                    </upToDateChecking>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>${spotless.action}</goal>
                        </goals>
                        <phase>validate</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.ekryd.sortpom</groupId>
                <artifactId>sortpom-maven-plugin</artifactId>
                <configuration>
                    <skip>${skipQA}</skip>
                    <keepBlankLines>false</keepBlankLines>
                    <spaceBeforeCloseEmptyElement>true</spaceBeforeCloseEmptyElement>
                    <createBackupFile>false</createBackupFile>
                    <verifyFail>stop</verifyFail>
                    <verifyFailOn>strict</verifyFailOn>
                    <expandEmptyElements>false</expandEmptyElements>
                    <nrOfIndentSpace>4</nrOfIndentSpace>
                    <indentSchemaLocation>false</indentSchemaLocation>
                    <sortDependencies>scope,groupId,artifactId</sortDependencies>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>${pom.fmt.action}</goal>
                        </goals>
                        <phase>verify</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>de.skuzzle.enforcer</groupId>
                        <artifactId>restrict-imports-enforcer-rule</artifactId>
                        <version>2.6.0</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <!-- see https://maven.apache.org/enforcer/enforcer-rules/index.html -->
                                <requireMavenVersion>
                                    <version>3.9.5</version>
                                    <message>Requires Maven 3.9.5 or higher</message>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>${java.version}</version>
                                    <message>Requires Java ${java.version} or higher</message>
                                </requireJavaVersion>
                                <bannedDependencies>
                                    <message>Do not use banned dependencies</message>
                                    <excludes>
                                        <exclude>junit:junit</exclude>
                                        <exclude>org.hamcrest:hamcrest-core</exclude>
                                        <exclude>org.hamcrest:hamcrest-all</exclude>
                                        <!-- slf4j should be used instead -->
                                        <exclude>log4j:log4j</exclude>
                                        <exclude>commons-logging:commons-logging</exclude>
                                        <exclude>commons-logging:commons-logging-api</exclude>
                                        <exclude>org.apache.logging.log4j:log4j-core</exclude>
                                        <exclude>org.slf4j:slf4j-simple</exclude>
                                        <exclude>joda-time:joda-time</exclude>
                                        <exclude>org.assertj:assertj-core</exclude>
                                    </excludes>
                                </bannedDependencies>
                                <RestrictImports>
                                    <reason>Use SLF4j for logging</reason>
                                    <bannedImports>
                                        <bannedImport>java.util.logging.**</bannedImport>
                                        <bannedImport>org.apache.commons.logging.**</bannedImport>
                                        <bannedImport>org.apache.logging.log4j.**</bannedImport>
                                    </bannedImports>
                                </RestrictImports>
                                <RestrictImports>
                                    <reason>Use JUnit 5 instead of JUnit 4 or older</reason>
                                    <bannedImport>org.junit.Assert.*</bannedImport>
                                </RestrictImports>
                                <banTransitiveDependencies>
                                    <excludes>
                                        <exclude>org.springframework.boot:spring-boot-starter-web</exclude>
                                        <exclude>org.springframework.boot:spring-boot-starter-data-jpa</exclude>
                                        <exclude>org.springframework.data:spring-data-rest-webmvc</exclude>
                                        <exclude>org.springframework.data:spring-data-rest-hal-explorer</exclude>
                                        <exclude>org.springframework.boot:spring-boot-starter-actuator</exclude>
                                        <exclude>org.springframework.boot:spring-boot-starter-test</exclude>
                                        <exclude>org.springframework.boot:spring-boot-starter-validation</exclude>
                                        <exclude>org.springframework.boot:spring-boot-starter-security</exclude>
                                        <exclude>org.springframework.boot:spring-boot-starter-oauth2-client</exclude>
                                        <exclude>org.springframework.boot:spring-boot-starter-quartz</exclude>
                                        <exclude>org.quartz-scheduler:quartz</exclude>
                                        <exclude>org.springframework.security:spring-security-test</exclude>
                                        <exclude>org.hibernate.orm:hibernate-core</exclude>
                                        <exclude>jakarta.persistence:jakarta.persistence-api</exclude>
                                        <exclude>io.hypersistence:hypersistence-utils-hibernate-63</exclude>
                                        <exclude>org.webjars:webjars-locator-core</exclude>
                                        <exclude>org.springframework.boot:spring-boot-starter-aop</exclude>
                                        <exclude>org.springframework.hateoas:spring-hateoas</exclude>
                                        <exclude>io.micrometer:micrometer-registry-prometheus</exclude>
                                        <exclude>io.micrometer:micrometer-core</exclude>
                                        <exclude>org.hibernate.orm:hibernate-micrometer</exclude>
                                        <exclude>com.microsoft.sqlserver:mssql-jdbc:jar</exclude>
                                        <exclude>io.sentry:sentry-spring-boot-starter-jakarta</exclude>
                                        <exclude>p6spy:p6spy:jar</exclude>
                                        <!-- basically each and every geotools module has a load of transitive dependencies -->
                                        <exclude>org.geotools:*</exclude>
                                        <exclude>org.geotools.jdbc:*</exclude>
                                        <exclude>org.geotools.xsd:*</exclude>
                                        <exclude>org.junit-pioneer:junit-pioneer</exclude>
                                        <exclude>com.squareup.okhttp3:*</exclude>
                                        <!-- lots of Jackson dependencies -->
                                        <exclude>com.fasterxml.jackson.core:jackson-databind</exclude>
                                        <exclude>org.flywaydb:flyway-core</exclude>
                                        <exclude>ch.rasc:sse-eventbus</exclude>
                                        <exclude>org.apache.solr:solr-solrj</exclude>
                                        <exclude>com.jayway.jsonpath</exclude>
                                        <exclude>org.junit.jupiter:junit-jupiter-api</exclude>
                                        <exclude>org.junit.jupiter:junit-jupiter-params</exclude>
                                    </excludes>
                                </banTransitiveDependencies>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <skip>${docker.skip}</skip>
                    <verbose>true</verbose>
                    <imagePullPolicy>${docker.pull.policy}</imagePullPolicy>
                    <images>
                        <image>
                            <!-- deploy snapshot tag -->
                            <name>${docker.deploy.repo}/tailormap/%a:snapshot</name>
                            <build>
                                <dockerFile>${project.basedir}/Dockerfile</dockerFile>
                                <args>
                                    <TAILORMAP_API_VERSION>${project.version}</TAILORMAP_API_VERSION>
                                    <BUILD_DATE>${maven.build.timestamp}</BUILD_DATE>
                                </args>
                                <buildx>
                                    <platforms>
                                        <platform>linux/amd64</platform>
                                    </platforms>
                                    <attestations>
                                        <provenance>false</provenance>
                                    </attestations>
                                </buildx>
                            </build>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>docker-build</id>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                    <execution>
                        <id>docker-push</id>
                        <goals>
                            <goal>push</goal>
                        </goals>
                        <!-- NB for deploy/push login is required on ghcr.io or docker.b3p.nl repository with
                             docker login - whatever value is ${docker.deploy.repo}
                             see: https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry
                         -->
                        <phase>deploy</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <pushChanges>true</pushChanges>
                    <releaseProfiles>release</releaseProfiles>
                    <tagNameFormat>tailormap-api-@{project.version}</tagNameFormat>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-site-plugin</artifactId>
                <configuration>
                    <skipDeploy>true</skipDeploy>
                    <generateSitemap>true</generateSitemap>
                    <attach>false</attach>
                    <outputEncoding>${project.build.sourceEncoding}</outputEncoding>
                    <relativizeSiteLinks>false</relativizeSiteLinks>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.skins</groupId>
                        <artifactId>maven-fluido-skin</artifactId>
                        <version>${maven-fluido-skin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <artifactId>maven-scm-publish-plugin</artifactId>
                <configuration>
                    <content>${project.reporting.outputDirectory}</content>
                    <scmBranch>gh-pages</scmBranch>
                    <tryUpdate>true</tryUpdate>
                    <addUniqueDirectory>true</addUniqueDirectory>
                    <checkoutDirectory>/tmp/gh-pages</checkoutDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>scm-publish</id>
                        <!-- deploy site with maven-scm-publish-plugin -->
                        <goals>
                            <goal>publish-scm</goal>
                        </goals>
                        <phase>site-deploy</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.cyclonedx</groupId>
                <artifactId>cyclonedx-maven-plugin</artifactId>
                <version>2.9.1</version>
                <configuration>
                    <projectType>application</projectType>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>makeBom</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <reporting>
        <plugins>
            <plugin>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>3.6.0</version>
            </plugin>
            <plugin>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${maven-pmd-plugin.version}</version>
                <configuration>
                    <rulesets>
                        <ruleset>${project.basedir}/build/qa/PMD-ruleset_for_TM.xml</ruleset>
                    </rulesets>
                    <linkXRef>true</linkXRef>
                    <includeTests>false</includeTests>
                    <excludeRoots>
                        <excludeRoot>target/generated-sources</excludeRoot>
                    </excludeRoots>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>3.8.0</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>ci-management</report>
                            <report>dependencies</report>
                            <report>dependency-convergence</report>
                            <report>dependency-management</report>
                            <report>distribution-management</report>
                            <report>index</report>
                            <report>issue-management</report>
                            <report>licenses</report>
                            <report>plugin-management</report>
                            <report>plugins</report>
                            <report>scm</report>
                            <report>summary</report>
                            <report>team</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
                <configuration>
                    <notimestamp>true</notimestamp>
                    <failOnWarnings>false</failOnWarnings>
                    <failOnError>${failOnValidation}</failOnError>
                    <doclint>${javadoc.doclint}</doclint>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>javadoc-no-fork</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>${versions-maven-plugin.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>dependency-updates-report</report>
                            <report>plugin-updates-report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>taglist-maven-plugin</artifactId>
                <version>3.2.1</version>
                <configuration>
                    <tagListOptions>
                        <tagClasses>
                            <tagClass>
                                <displayName>Todo Work</displayName>
                                <tags>
                                    <tag>
                                        <matchString>todo</matchString>
                                        <matchType>ignoreCase</matchType>
                                    </tag>
                                    <tag>
                                        <matchString>@todo</matchString>
                                        <matchType>ignoreCase</matchType>
                                    </tag>
                                </tags>
                            </tagClass>
                            <tagClass>
                                <displayName>Deprecated Work</displayName>
                                <tags>
                                    <tag>
                                        <matchString>@deprecated</matchString>
                                        <matchType>ignoreCase</matchType>
                                    </tag>
                                </tags>
                            </tagClass>
                        </tagClasses>
                    </tagListOptions>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <configuration>
                    <title>Aggregate Test Coverage</title>
                    <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                    <dataFileIncludes>
                        <!-- this has merged u-test and i-test coverage -->
                        <dataFileInclude>${project.build.directory}/jacoco.exec</dataFileInclude>
                        <!-- NO! <dataFileInclude>${project.build.directory}/jacoco-it.exec</dataFileInclude>-->
                    </dataFileIncludes>
                    <excludes>
                        <exclude>org/tailormap/api/viewer/model/**</exclude>
                        <exclude>org/tailormap/api/persistence/json/**</exclude>
                    </excludes>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report</report>
                            <!-- NO! <report>report-integration</report>-->
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>${dependency-check-maven.version}</version>
                <configuration>
                    <name>OWASP Dependency Check</name>
                    <nvdApiKey>${env.NVD_API_KEY}</nvdApiKey>
                    <autoUpdate>${dependencyCheckAutoUpdate}</autoUpdate>
                </configuration>
            </plugin>
        </plugins>
    </reporting>
    <profiles>
        <profile>
            <!-- automagically activated during release with maven-release-plugin -->
            <id>release</id>
            <properties>
                <dependencyCheckAutoUpdate>false</dependencyCheckAutoUpdate>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <compilerArgs>
                                <arg>-Xlint:${compiler.lint}</arg>
                            </compilerArgs>
                        </configuration>
                    </plugin>
                    <plugin>
                        <!-- deploy latest and versioned tag -->
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration>
                            <verbose>true</verbose>
                            <imagePullPolicy>Always</imagePullPolicy>
                            <images>
                                <image>
                                    <name>${docker.deploy.repo}/tailormap/%a:%v</name>
                                    <build>
                                        <dockerFile>${project.basedir}/Dockerfile</dockerFile>
                                        <tags>
                                            <tag>latest</tag>
                                        </tags>
                                        <args>
                                            <TAILORMAP_API_VERSION>${project.version}</TAILORMAP_API_VERSION>
                                            <BUILD_DATE>${maven.build.timestamp}</BUILD_DATE>
                                        </args>
                                        <buildx>
                                            <platforms>
                                                <platform>linux/amd64</platform>
                                            </platforms>
                                            <attestations>
                                                <provenance>false</provenance>
                                            </attestations>
                                        </buildx>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>docker-push</id>
                                <goals>
                                    <goal>push</goal>
                                </goals>
                                <phase>deploy</phase>
                                <configuration>
                                    <verbose>true</verbose>
                                    <images>
                                        <image>
                                            <name>${docker.deploy.repo}/tailormap/%a:%l</name>
                                        </image>
                                        <image>
                                            <name>${docker.deploy.repo}/tailormap/%a:latest</name>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>macos</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <properties>
                <docker.skip>true</docker.skip>
            </properties>
        </profile>
        <profile>
            <id>openbsd</id>
            <activation>
                <os>
                    <name>openbsd</name>
                    <family>unix</family>
                </os>
            </activation>
            <properties>
                <docker.skip>true</docker.skip>
            </properties>
        </profile>
        <profile>
            <id>windows</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <docker.skip>true</docker.skip>
                <!-- on windows we need to use -XepExcludedPaths:\Q${project.build.directory}\E.
                     see https://github.com/google/error-prone/issues/2394
                -->
                <errorProneExcludePaths>\Q${project.build.directory}\E.*</errorProneExcludePaths>
            </properties>
        </profile>
        <profile>
            <!-- use this profile to deactivate QA actions and docker builds etc -->
            <id>developing</id>
            <properties>
                <docker.skip>true</docker.skip>
                <skipQA>true</skipQA>
                <skipJavaDoc>true</skipJavaDoc>
                <docker.pull.policy>IfNotPresent</docker.pull.policy>
            </properties>
        </profile>
        <profile>
            <id>hal-explorer</id>
            <dependencies>
                <dependency>
                    <groupId>org.springframework.data</groupId>
                    <artifactId>spring-data-rest-hal-explorer</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <!-- this profile will be activated in case the flag -DskipQA=true is passed to maven -->
            <id>qa-skip</id>
            <activation>
                <property>
                    <name>skipQA</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <skipQA>true</skipQA>
                <skipJavaDoc>true</skipJavaDoc>
                <failOnWarnings>false</failOnWarnings>
                <docker.pull.policy>IfNotPresent</docker.pull.policy>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <compilerArgs>
                                <arg>-Xlint:${compiler.lint}</arg>
                            </compilerArgs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>postgresql</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>start-spring-boot</id>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <!-- start with populate-testdata profile before tests to populate database -->
                                <phase>pre-integration-test</phase>
                                <configuration>
                                    <!--suppress UnresolvedMavenProperty, MavenModelInspection -->
                                    <skip>${skipTests}</skip>
                                    <profiles>
                                        <profile>populate-testdata</profile>
                                    </profiles>
                                    <!--suppress UnresolvedMavenProperty -->
                                    <jvmArguments>${failsafeArgLine} -Dspatial.dbs.connect=true -Dtailormap-api.database.populate-testdata.exit=true</jvmArguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <includes>
                                <include>**/*IntegrationTest.java</include>
                            </includes>
                            <!--suppress UnresolvedMavenProperty -->
                            <argLine>${failsafeArgLine} -Dspring.profiles.active=postgresql -Dspring.profiles.default=postgresql</argLine>
                            <trimStackTrace>false</trimStackTrace>
                            <useFile>false</useFile>
                            <!--suppress UnresolvedMavenProperty, MavenModelInspection -->
                            <skipITs>${skipTests}</skipITs>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
