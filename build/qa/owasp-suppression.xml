<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (C) 2021 B3Partners B.V.

SPDX-License-Identifier: MIT
-->
<suppressions xmlns="https://jeremylong.github.io/DependencyCheck/dependency-suppression.1.3.xsd">
    <suppress>
        <notes><![CDATA[
   file name: commons-jxpath-*.jar
   ]]></notes>
        <packageUrl regex="true">^pkg:maven/commons\-jxpath/commons\-jxpath@.*$</packageUrl>
        <vulnerabilityName>CVE-2022-41852</vulnerabilityName>
        <vulnerabilityName>CVE-2022-40159</vulnerabilityName>
        <vulnerabilityName>CVE-2022-40160</vulnerabilityName>
    </suppress>
    <suppress>
        <notes><![CDATA[
   Applies to Eclipse IDE only
   ]]></notes>
        <cve>CVE-2023-4218</cve>
    </suppress>
    <suppress>
        <notes><![CDATA[
   any prometheus-metrics-* artifacts
   Applies to Prometheus (server) only
   ]]></notes>
        <gav regex="true">io\.prometheus:prometheus-metrics-*.*</gav>
        <cpe>cpe:/a:prometheus:prometheus</cpe>
    </suppress>
    <suppress>
        <notes><![CDATA[
   file name: quartz-2.3.2.jar
   this is disputed by multiple parties because it is not plausible that untrusted user input would reach the code location where injection must occur.
   ]]></notes>
        <packageUrl regex="true">^pkg:maven/org\.quartz-scheduler/quartz@.*$</packageUrl>
        <cve>CVE-2023-39017</cve>
    </suppress>
    <suppress>
        <notes><![CDATA[
   file names: jetty-io-10.0.24.jar / http2-client-10.0.24.jar
   We have Jetty dependencies because SolrJ uses the Jetty http classes, but not the vulnerable `HttpURI` class
   ]]></notes>
        <cve>CVE-2024-6763</cve>
    </suppress>
    <suppress>
        <notes><![CDATA[
   file names: http2-common-10.0.24.jar
   We have Jetty dependencies because SolrJ uses the Jetty http classes, but this is for the server
   ]]></notes>
        <cve>CVE-2025-1948</cve>
    </suppress>
</suppressions>
