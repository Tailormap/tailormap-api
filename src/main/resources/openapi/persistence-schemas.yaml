#
# Copyright (C) 2023 B3Partners B.V.
#
# SPDX-License-Identifier: MIT
#
openapi: 3.0.3

info:
  title: 'persistence-schemas'
  description: 'Schemas used for JSON persistence.'
  version: '1.0'

servers: [ ]
paths: { }

components:
  schemas:
    AuthorizationRuleDecision:
      type: string
      enum: ['allow', 'deny']

    AuthorizationRule:
      description: A single authorization rule.
      type: object
      required: ['groupName', 'decisions']
      properties:
        groupName:
          description: Name of the group.
          type: string
        decisions:
          description: A map of access type to decision.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AuthorizationRuleDecision'

    GeoServiceProtocol:
      $ref: './common-schemas.yaml#/components/schemas/GeoServiceProtocol'

    CatalogNode:
      description: Categorization for items in the catalog.
      properties:
        id:
          type: string
        title:
          type: string
        root:
          type: boolean
        children:
          type: array
          items:
            type: string
        items:
          type: array
          items:
            title: TailormapObjectRef
            type: object
            properties:
              kind:
                type: string
                enum: ['geo-service', 'feature-source', 'app']
              id:
                type: string

    TMServiceCaps:
      type: object
      properties:
        corsAllowOrigin:
          description: Value of the 'Access-Control-Allow-Origin' header from the GetCapabilities request. This may be
            null when it wasn't returned (no CORS support), '*' when CORS is enabled for all origins, or contain a 
            specific origin (usually when credentials are used).
          type: string
        serviceInfo:
          title: TMServiceInfo
          type: object
          properties:
            title:
              type: string
            keywords:
              type: array
              items:
                type: string
              uniqueItems: true
            description:
              type: string
            publisher:
              type: string
              format: uri
            schema:
              type: string
              format: uri
            source:
              type: string
              format: uri
        capabilities:
          type: object
          properties:
            version:
              type: string
            updateSequence:
              type: string
            abstractText:
              type: string
            request:
              title: TMServiceCapabilitiesRequest
              type: object
              properties:
                get-map:
                  type: object
                  properties:
                    formats:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                get-feature-info:
                  title: TMServiceCapabilitiesRequestGetFeatureInfo
                  type: object
                  properties:
                    formats:
                      type: array
                      items:
                        type: string
                      uniqueItems: true
                describe-layer:
                  type: boolean

    TMFeatureTypeInfo:
      type: object
      properties:
        keywords:
          type: array
          items:
            type: string
          uniqueItems: true
        description:
          type: string
        publisher:
          type: string
          format: uri
        schema:
          type: string
          format: uri
        source:
          type: string
          format: uri
        bounds:
          $ref: './common-schemas.yaml#/components/schemas/Bounds'
        crs:
          type: string
        wgs84BoundingBox:
          $ref: './common-schemas.yaml#/components/schemas/Bounds'
        defaultSrs:
          type: string
        otherSrs:
          items:
            type: string
          uniqueItems: true
        outputFormats:
          items:
            type: string
          uniqueItems: true
        abstractText:
          type: string

    TMGeometryType:
      $ref: './common-schemas.yaml#/components/schemas/TMGeometryType'

    TMAttributeType:
      $ref: './common-schemas.yaml#/components/schemas/TMAttributeType'

    TMAttributeDescriptor:
      properties:
        name:
          type: string
        comment:
          type: string
          description: Comment from the source, if available (such as database comment) [TODO]
        type:
          $ref: './common-schemas.yaml#/components/schemas/TMAttributeType'
        unknownTypeClassName:
          type: string
          description: Class name of type (as produced by GeoTools DataStore) which isn't in the
            type enum list and thus unknown. When the type is 'object' this should contain the full
            class-name, mostly for debugging purposes so the type may be added to the enum list.
        nullable:
          type: boolean
        description:
          type: string
        defaultValue:
          description: 'Default value for this attribute. It can be coerced to the type of the
            attribute using the `type` field.'
          nullable: true
          type: string


    ServiceAuthentication:
      properties:
        method:
          type: string
          enum:
            - password
        username:
          type: string
        password:
          type: string

    JDBCConnectionProperties:
      type: object
      properties:
        dbtype:
          type: string
          enum:
            - postgis
            - oracle
            - sqlserver
        database:
          type: string
        port:
          type: integer
          nullable: false
        host:
          type: string
        schema:
          type: string
        fetchSize:
          type: integer
        primaryKeyMetadataTable:
          type: string
        geometryMetadataTable:
          type: string
        additionalProperties:
          type: object
          additionalProperties:
            type: string
            example:
              connectionOptions: ';encrypt=false'

    FeatureTypeSettings:
      required:
        - attributeOrder
        - hideAttributes
        - attributeSettings
        - readOnlyAttributes
      properties:
        template:
          $ref: '#/components/schemas/FeatureTypeTemplate'
        attributeOrder:
          description: Reordering of the attributes by attribute names. Attributes in the feature
            type that are not in this array should still be shown; either after the attribute that
            precedes the attribute in the original feature type attribute ordering or at the end.
          type: array
          items:
            type: string
        hideAttributes:
          description: List of attribute names that should be hidden in all viewers.
          type: array
          items:
            type: string
        readOnlyAttributes:
          description: List of attribute names that are not editable.
          type: array
          items:
            type: string
        attributeSettings:
          title: AttributeSettings
          description: Map of attribute name to its' settings.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AttributeSettings'

    FeatureTypeTemplate:
      type: object
      description: Template/description for a feature. Will replace placeholders by attribute values in the viewer
      properties:
        template:
          type: string
        markupLanguage:
          type: string
        templateLanguage:
          type: string

    AttributeSettings:
      properties:
        title:
          type: string
          description: Display title for labels etc.
      # TODO add additional settings here, for example for editing, formatting, etc.

    GeoServiceSettings:
      description: Settings applying to a GeoService.
      properties:
        serverType:
          description: Server type to use for vendor-specific capabilities (high DPI, legends, etc.)
          type: string
          enum:
            - auto
            - disabled
            - geoserver
            - mapserver
          nullable: false
          default: auto
        useProxy:
          type: boolean
          nullable: false
          default: false
        publishing:
          title: ServicePublishingSettings
          type: object
          properties:
            baseApp:
              type: string
            defaultProjection:
              type: string
            projections:
              type: array
              items:
                type: string
        defaultLayerSettings:
          title: GeoServiceDefaultLayerSettings
          description: Default settings for all layers of this service which can be overridden on a per-layer basis.
          anyOf:
            - $ref: '#/components/schemas/LayerSettings'
            - $ref: '#/components/schemas/WMSLayerSettings'
            - $ref: '#/components/schemas/WMTSLayerSettings'
            - $ref: '#/components/schemas/Tiles3dLayerSettings'
            - $ref: '#/components/schemas/QuantizedMeshLayerSettings'
          default:
        layerSettings:
          # this appears to be broken since org.openapitools:openapi-generator-maven-plugin:7.8.0 / PR #913
          # it generates a class named GeoServiceLayerSettingsValue instead of GeoServiceLayerSettings
          # title: GeoServiceLayerSettings
          type: object
          additionalProperties:
            anyOf:
              - $ref: '#/components/schemas/LayerSettings'
              - $ref: '#/components/schemas/WMSLayerSettings'
              - $ref: '#/components/schemas/WMTSLayerSettings'
              - $ref: '#/components/schemas/XYZLayerSettings'
              - $ref: '#/components/schemas/Tiles3dLayerSettings'
              - $ref: '#/components/schemas/QuantizedMeshLayerSettings'
          example:
            'begroeidterreindeel':
              title: laag 1
            'begroeidterreindeel_2':
              title: laag 2
            'otherLayer':
              hiDpiDisabled: true
        xyzCrs:
          type: string
          nullable: true

    LayerSettings:
      description: Settings applying to any kind of layer of a GeoService.
      properties:
        title:
          description: Override default title, null if not overridden.
          nullable: true
          type: string
        hiDpiDisabled:
          nullable: true
          type: boolean
        featureType:
          $ref: '#/components/schemas/FeatureTypeRef'
        attribution:
          description: 'Attribution to show for this layer.'
          nullable: true
          type: string
        description:
          description: 'Description to show for this layer.'
          nullable: true
          type: string
        legendImageId:
          description: 'ID of uploaded legend image'
          nullable: true
          type: string
        authorizationRules:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizationRule'

    FeatureTypeRef:
      required: [featureSourceId, featureTypeName]
      properties:
        featureSourceId:
          type: integer
          format: int64
          nullable: false
        featureTypeName:
          type: string
          nullable: false

    WMSLayerSettings:
      description: Settings applying to a WMS layer.
      allOf:
        - $ref: '#/components/schemas/LayerSettings'
        - type: object
          required: [tilingDisabled, tilingGutter]
          properties:
            tilingDisabled:
              nullable: true
              type: boolean
              default: true
            tilingGutter:
              nullable: true
              type: integer
              # TODO: set global default here or in frontend?

    WMTSLayerSettings:
      description: Settings applying to a WMTS layer.
      allOf:
        - $ref: '#/components/schemas/LayerSettings'
        - type: object
          properties:
            hiDpiMode:
              $ref: './common-schemas.yaml#/components/schemas/TileLayerHiDpiMode'
            hiDpiSubstituteLayer:
              nullable: true
              description: Layer name of this service to substitute when rendering at high dpi.
              type: string

    XYZLayerSettings:
      description: Settings applying to a XYZ layer.
      allOf:
        - $ref: '#/components/schemas/LayerSettings'
        - type: object
          properties:
            minZoom:
              nullable: true
              type: integer
              description: minZoom property of OpenLayers XYZ source
            maxZoom:
              nullable: true
              type: integer
              description: maxZoom property of OpenLayers XYZ source
            tileSize:
              nullable: true
              type: integer
              description: 'tile size property of OpenLayers XYZ source'
            tileGridExtent:
              nullable: true
              $ref: './common-schemas.yaml#/components/schemas/Bounds'
              description: 'tile grid bounds property of OpenLayers XYZ source'
            hiDpiMode:
              $ref: './common-schemas.yaml#/components/schemas/TileLayerHiDpiMode'
            hiDpiSubstituteLayer:
              nullable: true
              description: Alternate URL template to use when rendering at high dpi (using 'layer' instead of 'url' in the name for ease of use).
              type: string

    Tiles3dLayerSettings:
      description: Settings applying to a 3D Tiles layer.
      allOf:
        - $ref: '#/components/schemas/LayerSettings'

    QuantizedMeshLayerSettings:
      description: Settings applying to a Quantized Mesh layer.
      allOf:
        - $ref: '#/components/schemas/LayerSettings'

    GeoServiceLayer:
      description: Layer of a service which can be an OGC WMS/WMTS service or from XYZ/ArcGIS REST.
      required: [id, name, root, virtual, children]
      properties:
        id:
          type: string
          description: Unique id assigned by TM, not from the capabilities. Assigned to make a tree with virtual layers.
            When referring to a non-virtual layer the name should always be used.
        name:
          type: string
        root:
          type: boolean
        title:
          type: string
        virtual:
          type: boolean
          description: A virtual layer has no name and can't be used in GetMap requests and is only used for tree 
            structure.
        maxScale:
          type: number
          format: double
        minScale:
          type: number
          format: double
        crs:
          description: Only the CRSes added by this layer, all parent CRSes are inherited.
          type: array
          uniqueItems: true
          items:
            type: string
        latLonBoundingBox:
          $ref: './common-schemas.yaml#/components/schemas/Bounds'
        styles:
          type: array
          items:
            $ref: './common-schemas.yaml#/components/schemas/WMSStyle'
        queryable:
          type: boolean
        abstractText:
          type: string
        children:
          type: array
          items:
            # layer name
            type: string

    AppTreeNode:
      oneOf:
        - $ref: '#/components/schemas/AppTreeLevelNode'
        - $ref: '#/components/schemas/AppTreeLayerNode'
      discriminator:
        propertyName: objectType
        mapping:
          AppTreeLevelNode: '#/components/schemas/AppTreeLevelNode'
          AppTreeLayerNode: '#/components/schemas/AppTreeLayerNode'
      required:
        - id

    AppTreeLevelNode:
      description: Node for organizing app layer referencing nodes in a folder tree.
      properties:
        id:
          description: A unique identifier across all tree nodes.
          type: string
        objectType:
          type: string
        title:
          description: Display title of this tree node.
          type: string
        description:
          description: Description for this node entered by application admin.
          type: string
        root:
          description: Only a single node in a tree will have this set to true.
          type: boolean
        childrenIds:
          description: Ordered list of ids of LayerTreeNodes that are children of this node.
          type: array
          items:
            type: string
      required:
        - root
        - title
        - childrenIds

    AppTreeLayerNode:
      description: Node referencing a layer.
      properties:
        id:
          description: A unique identifier across all tree nodes.
          type: string
        objectType:
          type: string
        serviceId:
          type: string
        layerName:
          type: string
          nullable: false
        description:
          description: Description for this node entered by application admin.
          type: string
        visible:
          type: boolean
          description: Whether this layer should be shown on the map on startup.
          nullable: false
          default: true
      required:
        - serviceId
        - layerName

    AppContent:
      description: Configuration for including content (layers) in an application.
      properties:
        baseLayerNodes:
          type: array
          items:
            $ref: '#/components/schemas/AppTreeNode'
        layerNodes:
          type: array
          items:
            $ref: '#/components/schemas/AppTreeNode'
        terrainLayerNodes:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/AppTreeNode'

    AppSettings:
      description: Settings applying to a viewer application.
      properties:
        i18nSettings:
          $ref: './common-schemas.yaml#/components/schemas/AppI18nSettings'
        uiSettings:
          $ref: './common-schemas.yaml#/components/schemas/AppUiSettings'
        layerSettings:
          title: AppLayerSettings
          description: Map of id of an AppTreeLayerNode to its' settings.
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AppLayerSettings'

    AppLayerSettings:
      properties:
        title:
          nullable: true
          type: string
        opacity:
          type: integer
          nullable: false
          default: 100
        attribution:
          description: 'Attribution to show for this layer.'
          nullable: true
          type: string
        description:
          description: 'Description to show for this layer.'
          nullable: true
          type: string
        editable:
          type: boolean
          nullable: true
          default: false
        formId:
          type: integer
          nullable: true
          format: int64
        searchIndexId:
          type: integer
          nullable: true
          format: int64
        hideAttributes:
          description: List of attribute names that should be hidden (in addition to attributes already hidden by the
            feature type settings).
          type: array
          items:
            type: string
        readOnlyAttributes:
          description: List of feature type attribute names that are not editable (in addition to read only attributes
            from the feature type settings).
          type: array
          items:
            type: string
        autoRefreshInSeconds:
          description: Auto refresh layer in seconds
          type: number
          format: double
          nullable: true
        # TODO add properties for selected WMS style, feature info popup template, etc.

    FormOptions:
      $ref: './common-schemas.yaml#/components/schemas/FormOptions'
    FormField:
      $ref: './common-schemas.yaml#/components/schemas/FormField'

    MenuItem:
      description: 'model for a menu items'
      allOf:
        - $ref: "./viewer-schemas.yaml#/components/schemas/ViewerMenuItem"
        - type: object
          properties:
            pageId:
              type: integer
              format: int64
            exclusiveOnPageId:
              type: integer
              format: int64

    PageTile:
      description: 'model for a page tile'
      type: object
      properties:
        id:
          type: string
        title:
          type: string
          description: page tile title
        content:
          type: string
          description: page tile contents
        image:
          type: string
          nullable: true
          description: image to show on the tile
        applicationId:
          type: integer
          nullable: true
          format: int64
          description: linked application
        pageId:
          type: integer
          nullable: true
          format: int64
          description: linked page
        url:
          type: string
          nullable: true
          description: link to an other domain / website
        className:
          type: string
          nullable: true
          description: optional css classname for styling
        filterRequireAuthorization:
          type: boolean
          nullable: true
          description: indicates if this tile should be filtered from the list if an application id is set for which the user does not have access
        openInNewWindow:
          type: boolean
          nullable: true
          description: indicates whether the link should be opened in a new window

    AdminAdditionalProperty:
      type: object
      title: AdminAdditionalProperty
      required:
        - name
        - public
        - value
      properties:
        key:
          type: string
          nullable: false
        isPublic:
          type: boolean
          nullable: false
        value:
          type: object
