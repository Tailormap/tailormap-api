#
# Copyright (C) 2021 B3Partners B.V.
#
# SPDX-License-Identifier: MIT
#
openapi: 3.0.3
info:
  title: 'models'
  description: 'Tailormap API models has all the models for the Tailormap API.'
  version: '1.0'
  license:
    name: 'MIT'
    url: 'https://mit-license.org/'
  contact:
    name: 'B3Partners BV'
    url: 'https://www.b3partners.nl/'
    email: 'info@b3partners.nl'

# no servers or paths, just the models in this document
servers: [ ]
paths: { }

components:
  schemas:
    TMCoordinateReferenceSystem:
      description: 'CRS information'
      type: object
      properties:
        code:
          description: 'The CRS identifier'
          type: string
          example: 'EPSG:28992'
        definition:
          description: 'CRS definition in WKT format'
          type: string
          example: PROJCS["Amersfoort / RD New", GEOGCS["Amersfoort", DATUM["Amersfoort", SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067956, 4.0812], AUTHORITY["EPSG","6289"]], PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], UNIT["degree", 0.017453292519943295], AXIS["Geodetic latitude", NORTH], AXIS["Geodetic longitude", EAST], AUTHORITY["EPSG","4289"]], PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], PARAMETER["central_meridian", 5.387638888888891], PARAMETER["latitude_of_origin", 52.15616055555556], PARAMETER["scale_factor", 0.9999079], PARAMETER["false_easting", 155000.0], PARAMETER["false_northing", 463000.0], UNIT["m", 1.0], AXIS["Easting", EAST], AXIS["Northing", NORTH], AUTHORITY["EPSG","28992"]]
        bounds:
          description: 'Area of validity of this CRS'
          nullable: true
          $ref: './common-schemas.yaml#/components/schemas/Bounds'
        unit:
          description: 'The unit if all axis use the same unit, null otherwise'
          nullable: true
          type: string
          example: 'm'
      required:
        - code
        - definition
      example:
        code: 'EPSG:28992'
        definition: '+proj=sterea +lat_0=52.15616055555555 +lon_0=5.38763888888889 +k=0.9999079 +x_0=155000 +y_0=463000 +ellps=bessel +towgs84=565.417,50.3319,465.552,-0.398957,0.343988,-1.8774,4.0725 +units=m +no_defs'
        bounds: {
          miny: 646.36,
          minx: 308975.28,
          maxy: 276050.82,
          maxx: 636456.31
        }
        unit: 'm'


    AppLayer:
      description: '
      A map layer, but only enough information to draw the layer.
      For advanced functionality that required access to attributes the LayerDetails should be requested.
      '
      type: object
      required:
        - id
        - serviceId
        - layerName
        - title
        - visible
        - hasAttributes
      properties:
        id:
          type: string
          description: Unique id of this layer reference in the application. Another app layer
            may exist which references the same layerName of the same service, but with different
            settings.
        serviceId:
          type: string
        layerName:
          description: Layer name as known by the service.
          type: string
        title:
          description: Layer title or display name.
          type: string
        url:
          description: URL for this specific layer. If empty use URL from the service.
          type: string
        visible:
          type: boolean
        opacity:
          description: The opacity of the layer (in percentage, from 0-100, where 0 is "transparent" and 100 is "opaque").
          type: integer
        minScale:
          description: Minimum scale at which this layer should be shown or is not blank. When absent there is no minimum. As reported by the service (ScaleHint or MinScaleDenominator).
          type: number
          format: double
        maxScale:
          description: Maximum scale denominator at which this layer should be shown or is not blank. When absent there is no maximum. As reported by the service (ScaleHint or MaxScaleDenominator).
          type: number
          format: double
        legendImageUrl:
          description: URL to an image with the layer legend.
          type: string
        tilingDisabled:
          description: Set to true to request a single tile for WMS (may result in errors when max size/mem exceeded)
          type: boolean
        tilingGutter:
          description: Gutter around tile to discard to avoid tile edge rendering artifacts
          type: integer
        hiDpiDisabled:
          description: Set to true to *not* render in high DPI when available
          type: boolean
          nullable: false
        hiDpiMode:
          $ref: './common-schemas.yaml#/components/schemas/TileLayerHiDpiMode'
        hiDpiSubstituteLayer:
          description: 'The layer name of this service to substitute when the device pixel ratio is higher'
          type: string
        minZoom:
          description: 'Minimum zoom for XYZ layer'
          type: integer
        maxZoom:
          description: 'Maximum zoom for XYZ layer'
          type: integer
        tileSize:
          description: 'Tile size for XYZ layer'
          type: integer
        tileGridExtent:
          $ref: './common-schemas.yaml#/components/schemas/Bounds'
          description: 'Tile grid bounds for XYZ layer'
        hasAttributes:
          description: 'Whether this layer has attributes that can be accessed eg. for feature info or attribute list'
          type: boolean
        editable:
          description: 'Whether this layer can be edited.'
          type: boolean
        attribution:
          description: 'Attribution text to show for this layer.'
          type: string
        description:
          description: 'Description text to show for this layer, may contain some links and images (see htmlify pipe)'
          type: string
        autoRefreshInSeconds:
          description: 'Automatically refresh the layer (in seconds)'
          type: number
          format: double
          nullable: true
        searchIndex:
          $ref: '#/components/schemas/LayerSearchIndex'
        webMercatorAvailable:
          description: Whether Web Mercator projection is available for this layer.
          type: boolean


    LayerTreeNode:
      description: Grouping of layers in a tree structure.
      type: object
      properties:
        id:
          description: A unique identifier across all tree nodes.
          type: string
        appLayerId:
          type: string
        root:
          description: Only a single node in a tree will have this set to true.
          type: boolean
        name:
          description: Display name of this tree node. If appLayerId is present, this is the title of that AppLayer.
          type: string
        description:
          description: Description for this node entered by application admin.
          type: string
        childrenIds:
          description: Ordered list of ids of LayerTreeNodes that are children of this node.
          type: array
          items:
            type: string
      required:
        - id
        - name

    LayerDetails:
      description: 'All details of an app layer.'
      type: object
      properties: # TODO aanvullen
        id:
          type: string
        featureTypeName:
          type: string
        serviceId:
          type: string
        geometryAttribute:
          type: string
        geometryAttributeIndex:
          description: 'index of the geometryAttribute in the array of attributes.'
          type: integer
          format: int32
        geometryType:
          $ref: './common-schemas.yaml#/components/schemas/TMGeometryType'
        editable:
          type: boolean
          default: false
        form:
          type: object
          nullable: true
          properties:
            options:
              $ref: './common-schemas.yaml#/components/schemas/FormOptions'
            fields:
              type: array
              items:
                $ref: './common-schemas.yaml#/components/schemas/FormField'
        attributes:
          description: '
          Array with attributes.
          **note** that the ordering of this array is determined in the backend and does not need
          to coincide with the actual data in the data source.
          '
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
      required:
        - id
        - serviceId

    LayerSearchIndex:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string

    LayerExportCapabilities:
      type: object
      required: [exportable]
      properties:
        exportable:
          nullable: false
          type: boolean
        outputFormats:
          type: array
          items:
            type: string

    Attribute:
      type: object
      required: [name]
      properties:
        featureType:
          type: integer
          format: int64
          readOnly: true
        key:
          description: 'Name of the attribute.'
          type: string
        type:
          $ref: './common-schemas.yaml#/components/schemas/TMAttributeType'
        editable:
          description: 'Whether the attribute can be edited.'
          type: boolean
        defaultValue:
          description: 'Default value for this attribute. The value may need to be coerced to the correct type.'
          nullable: true
          type: string
        nullable:
          description: 'Whether the attribute can be null.'
          type: boolean

    Feature:
      description: '
      A possibly complete feature from the attribute source. 
      The feature could have been filtered to not provide certain attributes.
      Any geometry attributes will be presented in WKT format
      '
      type: object
      required:
        - __fid
        - attributes
      properties:
        __fid:
          description: 'feature id, a non-mutable identifier from the attribute source'
          readOnly: true
          type: string
        geometry:
          description: '
            Default geometry of the feature as WKT, possibly simplified. 
            Always linearized to make sure that it only holds a specification valid WKT.
            Can be used for highlighting or buffer/selection, not for editing.
            '
          type: string
        attributes:
          description: 'feature attributes in key/value pairs'
          type: object
          minProperties: 1
          additionalProperties: true
      example:
        __fid: 1
        geometry: "POLYGON(...)"
        attributes:
          name: "Utrecht"
          geom: "POLYGON(...)"
          surface: 40

    ColumnMetadata:
      type: object
      description: 'presentation metadata for a feature'
      properties:
        key:
          description: 'Name of the attribute.'
          type: string
        alias:
          type: string
          nullable: true
        type:
          $ref: './common-schemas.yaml#/components/schemas/TMAttributeType'
      example:
        key: 'geom'
        alias: 'Geometry'
        type: 'geometry'

    Service:
      description: 'A service provides one or more layers used in a viewer'
      type: object
      required: [id, title, url, protocol, capabilities, serverType]
      properties:
        id:
          type: string
          nullable: false
        title:
          type: string
          nullable: false
        url:
          type: string
          nullable: false
        protocol:
          $ref: './common-schemas.yaml#/components/schemas/GeoServiceProtocol'
        capabilities:
          description: 'capabilities document of the service - currently only for WMTS'
          type: string
          nullable: true
        serverType:
          type: string
          nullable: false
          enum:
            - generic
            - geoserver
            - mapserver
          default: generic

    Component:
      description: 'a component to be used in the application'
      type: object
      properties:
        type:
          description: 'component type eg. featurereport or print'
          type: string
          nullable: false
        config:
          description: 'component specific configuration'
          title: 'componentConfig'
          type: object
          required: [ "enabled" ]
          properties:
            enabled:
              type: boolean
          additionalProperties:
            description: 'anything else, component specific'
            type: object
      required:
        - type
        - config
      example:
        type: 'featurereport'
        config: { template: 'FeatureReport.xsl',
                  legendLayers: [ ],
                  numOfRelatedFeatures: 10,
                  reportLayers: [ ],
                  label: '',
                  title: 'FeatureReport',
                  subTitle: 'detail about parcel $1',
                  layers: [ ] }

    AppStyling:
      description: 'model for describing the style of an application'
      type: object
      properties:
        primaryColor:
          description: 'the primary color for an application'
          type: string
          nullable: true
        logo:
          description: 'application logo'
          type: string
          nullable: true
      example:
        primaryColor: '#6236ff'
        logo: '<<base64 string>> | <<url>>'

    AdditionalProperty:
      type: object
      required:
        - name
        - value
      properties:
        key:
          type: string
          nullable: false
        value:
          type: object

    Page:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        type:
          type: string
          nullable: true
          description: define the type of the page which can be used to switch between layouts for example
        name:
          type: string
          nullable: true
          description: name of the page which will be used for the url
        title:
          type: string
          nullable: true
          description: page title
        content:
          type: string
          nullable: true
        className:
          type: string
          nullable: true
          description: page body content
        tiles:
          description: list of tiles, tiles are used to link to applications or other pages
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/ViewerPageTile'
        menu:
          description: list of menu items for this page
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/ViewerMenuItem'

    ViewerPageTile:
      description: model for a page tile as returned by the api for the viewer
      type: object
      properties:
        title:
          type: string
          description: page tile title
        content:
          type: string
          description: page tile contents
        image:
          type: string
          nullable: true
          description: image to show on the tile
        applicationUrl:
          type: string
          nullable: true
          description: link to the application
        pageUrl:
          type: string
          nullable: true
          description: link to another page
        url:
          type: string
          nullable: true
          description: link to an other domain / website
        className:
          type: string
          nullable: true
          description: optional css classname for styling
        applicationRequiresLogin:
          type: boolean
          nullable: true
          description: indicates if the user will need to login for the linked application
        openInNewWindow:
          type: boolean
          nullable: true
          description: indicates whether the link should be opened in a new window

    ViewerMenuItem:
      description: model for a menu item for pages
      type: object
      properties:
        label:
          type: string
          description: menu item label
        pageUrl:
          type: string
          nullable: true
          description: link to another page
        url:
          type: string
          nullable: true
          description: link to an other domain / website
        openInNewWindow:
          type: boolean
          nullable: true
          description: indicates whether the link should be opened in a new window
