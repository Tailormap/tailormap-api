# base path for the API
tailormap-api.base-path=/api
tailormap-api.admin.base-path=/api/admin

# List of frontend locale bundles languages which are available as subdirectories in the static resources path.
# Used for content-negotiation based on the Accept-Language header.
# The first language is used as the default.
tailormap-api.supported-languages=en,nl,de

tailormap-api.sentry.dsn=${VIEWER_SENTRY_DSN:#{null}}

tailormap-api.security.admin.create-if-not-exists=true
tailormap-api.security.admin.username=tm-admin
# A hashed password can be specified in the ADMIN_HASHED_PASSWORD environment variable. If empty or not specified a
# random password will be generated and logged.
# If the admin account already exists the hashed password will /not/ be updated with this value.
# This value is only used if it starts with "{bcrypt}". Use the Spring Boot CLI to hash a password.
tailormap-api.security.admin.hashed-password=${ADMIN_HASHED_PASSWORD:#{null}}

# connect and read timeout for external services (wms, wmts, wfs, jdbc)
tailormap-api.timeout=5000

# page size for features
tailormap-api.pageSize=100
# whether the api should attempt to provide exact feature counts for all WFS requests
# may result in double query execution, once for counting and once for the actual data
tailormap-api.features.wfs_count_exact=false
# maximum number of items to return in a single (WFS/JDBC) feature info request
tailormap-api.feature.info.maxitems=30

# Should match the list in tailormap-viewer class AttributeListExportService
tailormap-api.export.allowed-outputformats=csv,text/csv,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,excel2007,application/vnd.shp,application/x-zipped-shp,SHAPE-ZIP,application/geopackage+sqlite3,application/x-gpkg,geopackage,geopkg,gpkg,application/geo+json,application/geojson,application/json,json,DXF-ZIP

# whether the API should use GeoTools "Unique Collection" (use DISTINCT in SQL statements) or just
# retrieve all values when calculating the unique values for a property.
# There might be a performance difference between the two, depending on the data
tailormap-api.unique.use_geotools_unique_function=true

# password policy
# whether to check for strong passwords or length only
tailormap-api.strong-password.validation=true
tailormap-api.strong-password.min-length=8
# minimum strength of password, 0-4, 0(risky) - 4(very strong)
# see https://github.com/GoSimpleLLC/nbvcxz/blob/607bb57d54bdb612d784206f6ae1c0cf74701a1c/src/main/java/me/gosimple/nbvcxz/scoring/Result.java#L174-L198
tailormap-api.strong-password.min-strength=3

tailormap-api.source-map.auth=${SOURCE_MAP_AUTH:#{null}}

tailormap-api.oidc.name=${OIDC_NAME:#{null}}
tailormap-api.oidc.issuer-uri=${OIDC_ISSUER_URI:#{null}}
tailormap-api.oidc.client-id=${OIDC_CLIENT_ID:#{null}}
tailormap-api.oidc.client-secret=${OIDC_CLIENT_SECRET:#{null}}
tailormap-api.oidc.user-name-attribute=${OIDC_CLIENT_USER_NAME_ATTRIBUTE:#{null}}
tailormap-api.oidc.show-for-viewer=${OIDC_SHOW_FOR_VIEWER:false}

# note trailing slash on url
tailormap-api.solr-url=${SOLR_URL:#{"http://solr:8983/solr/"}}
tailormap-api.solr-core-name=${SOLR_CORE_NAME:tailormap}
# the number of documents that are submitted per batch to the external Solr service
tailormap-api.solr-batch-size=5000
# http/2 request timeout for solr client
tailormap-api.solr-request-timeout-seconds=240
# http/2 connection timeout for solr client
tailormap-api.solr-connection-timeout-seconds=60
# http/2 idle timeout, to close lingering connections to solr
tailormap-api.solr-idle-timeout-seconds=10
# should be less than the Solr idle timeout
tailormap-api.solr-query-timeout-seconds=7
# one of "error", "none", "repairBuffer0", "repairConvexHull"
# Note that changing this value will require a recreation of the Solr schema/core
# and subsequent reindexing of the data
tailormap-api.solr-geometry-validation-rule=repairBuffer0

# in the tailormap-viewer Docker Compose stack this is changed to 0.0.0.0
server.address=localhost
server.http2.enabled=true
server.forward-headers-strategy=native

server.compression.enabled=true

# serve static frontend from this directory (/home/spring is the workdir in Dockerfile)
spring.web.resources.static-locations=file:/home/spring/static/,classpath:/static/

spring.main.banner-mode=off
spring.application.name=@project.artifactId@

spring.datasource.url=jdbc:postgresql:tailormap
spring.datasource.username=tailormap
spring.datasource.password=tailormap
#spring.datasource.driver-class-name=com.p6spy.engine.spy.P6SpyDriver
spring.datasource.pool-size=30

spring.flyway.default-schema=public
spring.flyway.schemas=public,quartz

spring.jpa.open-in-view=false

spring.data.rest.base-path=/api/admin
spring.data.rest.detection-strategy=default
spring.data.rest.return-body-on-create=true
spring.data.rest.return-body-on-update=true

# Quartz configuration
spring.quartz.job-store-type=jdbc
spring.quartz.properties.org.quartz.jobStore.tablePrefix=quartz.
spring.quartz.jdbc.initialize-schema=never
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
spring.quartz.properties.org.quartz.threadPool.threadCount=3
spring.quartz.properties.org.quartz.scheduler.skipUpdateCheck=true
spring.quartz.overwrite-existing-jobs=true

# Actuator

# Use the Spring CLI encodepassword command to encode a password and set the following environment
# variable to set the password for the 'actuator' account for access to the management APIs at
# /api/actuator using HTTP Basic.
# The 'actuator' account will be added to the database only if it does already not exist. It is
# possible for a user admin to change the password via the admin interface, or remove/disable it.
tailormap-api.management.hashed-password=${MANAGEMENT_HASHED_PASSWORD:#{null}}
# TODO: for deployments not publicly accessible for scraping but which do have push access, configure the Prometheus Pushgateway.

management.endpoints.access.default=none
management.endpoints.web.base-path=/api/actuator
management.endpoints.web.exposure.include=info,health,prometheus,loggers,logfile,mappings,quartz,sbom

management.endpoint.logfile.access=read-only
# NOTE this `loggers` is an endpoint that can change the configuration while running using POST requests
management.endpoint.loggers.access=read_only
management.endpoint.info.access=read_only
management.endpoint.health.access=read_only
management.endpoint.health.show-details=ALWAYS
management.endpoint.configprops.show-values=WHEN_AUTHORIZED
# too slow with bcrypt and http basic (~100ms password hashing each request) - use prometheus endpoint instead
management.endpoint.metrics.access=read_only
management.endpoint.prometheus.access=read_only
management.endpoint.quartz.access=read_only
# Software Bill of Materials
# at /api/actuator/sbom/application
management.endpoint.sbom.access=read_only
management.metrics.tags.application=tailormap-api
management.metrics.tags.hostname=${HOST:localhost}
management.metrics.data.repository.autotime.enabled=true
management.metrics.data.repository.autotime.percentiles=0.5,0.95,0.99
management.prometheus.metrics.export.enabled=true
management.prometheus.metrics.export.descriptions=true

# Create logfile in current directory
logging.file.name=tailormap.log
logging.include-application-name=false

logging.group.tailormap=org.tailormap
logging.group.geotools=org.geotools
logging.group.auth=org.tailormap.api.security
